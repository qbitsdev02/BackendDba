{
    "openapi": "3.0.0",
    "info": {
        "title": "CMM API Documentation",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/",
            "description": "CMM env"
        }
    ],
    "paths": {
        "/api": {},
        "/actives": {
            "get": {
                "tags": [
                    "Active"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getactive",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "active all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Active"
                ],
                "summary": "Creates a new active",
                "description": "Creates a new active",
                "operationId": "4c59bf27e1a794653c0888b9e3e23a69",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Active"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/actives/{id}": {
            "get": {
                "tags": [
                    "Active"
                ],
                "summary": "Get active information",
                "description": "Returns Port data",
                "operationId": "getactivesById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Active id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Active"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Active"
                ],
                "summary": "Update existing Active",
                "description": "Returns updated port data",
                "operationId": "updateactive",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Active id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Active"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Active"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Active"
                ],
                "summary": "Delete existing active",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteactive",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "active id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/attributes": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getattributes",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "attributes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Creates a new attributes",
                "description": "Creates a new attribute",
                "operationId": "523b13419a3863810e18b1837b3bb8ce",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/attributes/{id}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Get attribute information",
                "description": "Returns attribute data",
                "operationId": "getattributeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "attribute id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Update existing Attribute",
                "description": "Returns updated port data",
                "operationId": "updateattribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attribute id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Delete existing attribute",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteattribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attribute id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/beneficiaries": {
            "get": {
                "tags": [
                    "Beneficiary"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getBeneficiary",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Beneficiarys all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Beneficiary"
                ],
                "summary": "Creates a new Beneficiary",
                "description": "Creates a new Beneficiary",
                "operationId": "5212eb3663d5e1d59ba0dd27fb6df6d3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Beneficiary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Beneficiary resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/beneficiaries/{id}": {
            "get": {
                "tags": [
                    "Beneficiary"
                ],
                "summary": "Get Beneficiary information",
                "description": "Returns Beneficiary data",
                "operationId": "getBeneficiaryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Beneficiary id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beneficiary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Beneficiary"
                ],
                "summary": "Update existing Beneficiary",
                "description": "Returns updated Beneficiary data",
                "operationId": "updateBeneficiary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Beneficiary id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Beneficiary"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beneficiary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Beneficiary"
                ],
                "summary": "Delete existing Beneficiary",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteBeneficiary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Beneficiary id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getcategories",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Creates a new category",
                "description": "Creates a new category",
                "operationId": "bb02f0320882db37f99574196577e446",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category information",
                "description": "Returns category data",
                "operationId": "getcategoriesById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update existing Category",
                "description": "Returns updated port data",
                "operationId": "updatecategories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete existing Category",
                "description": "Deletes a record and returns no content",
                "operationId": "deletecategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getClient",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Clients all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Creates a new Client",
                "description": "Creates a new Client",
                "operationId": "15981a5da120d8b4ea1b91b05a35622b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Client resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an unexpected error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/clients/{id}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get Client information",
                "description": "Returns Client data",
                "operationId": "getClientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Client"
                ],
                "summary": "Update existing Client",
                "description": "Returns updated Client data",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Client"
                ],
                "summary": "Delete existing Client",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/coins": {
            "get": {
                "tags": [
                    "Coin"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getCoin",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "coin resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a coin resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "coin resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a coin resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "coin resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "coin resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a coin resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Coins all."
                    },
                    "default": {
                        "description": "error."
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Coin"
                ],
                "summary": "Creates a new Coin",
                "description": "Creates a new Coin",
                "operationId": "627d76d6a39d34e282e313322ba4ba64",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Coin resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/coins/{id}": {
            "get": {
                "tags": [
                    "Coin"
                ],
                "summary": "Get Coin information",
                "description": "Returns Coin data",
                "operationId": "getCoinById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Coin"
                ],
                "summary": "Update existing Coin",
                "description": "Returns updated Coin data",
                "operationId": "updateCoin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coin"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Coin"
                ],
                "summary": "Delete existing Coin",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCoin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getcompanies",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Companies all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Creates a new company",
                "description": "Creates a new company",
                "operationId": "dd2ae66c40ea62cd8f20d49bc08e4b21",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/companies/{id}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get company information",
                "description": "Returns company data",
                "operationId": "getcompaniesById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Company"
                ],
                "summary": "Update existing company",
                "description": "Returns updated company data",
                "operationId": "updatecompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Company"
                ],
                "summary": "Delete existing company",
                "description": "Deletes a record and returns no content",
                "operationId": "deletecompanies",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/concepts": {
            "get": {
                "tags": [
                    "Concept"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getConcept",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Concepttypes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Concept"
                ],
                "summary": "Creates a new Concept",
                "description": "Creates a new Concept",
                "operationId": "09e550a69e398def0743b8f711f898ec",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Concept"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Concept resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "  *"
                        ]
                    }
                ]
            }
        },
        "/concepts/{id}": {
            "get": {
                "tags": [
                    "Concept"
                ],
                "summary": "Get Concept information",
                "description": "Returns Concept data",
                "operationId": "getConceptById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Concept id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Concept"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Concept"
                ],
                "summary": "Update existing Concepttype",
                "description": "Returns updated Concepttype data",
                "operationId": "updateConcept",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Concept id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Concept"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Concept"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Concept"
                ],
                "summary": "Delete existing Concept",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteConcept",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Concept id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/concept-types": {
            "get": {
                "tags": [
                    "ConceptType"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getConceptType",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show ConceptTypes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "ConceptType"
                ],
                "summary": "Creates a new ConceptType",
                "description": "Creates a new ConceptType",
                "operationId": "0bdf6e973244afeafe95bc566e446b1a",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConceptType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The ConceptType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "  *"
                        ]
                    }
                ]
            }
        },
        "/concept-types/{id}": {
            "get": {
                "tags": [
                    "ConceptType"
                ],
                "summary": "Get ConceptType information",
                "description": "Returns ConceptType data",
                "operationId": "getConceptTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "ConceptType"
                ],
                "summary": "Update existing ConceptType",
                "description": "Returns updated ConceptType data",
                "operationId": "updateEgress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConceptType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ConceptType"
                ],
                "summary": "Delete existing ConceptType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteEgress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/drivers": {
            "get": {
                "tags": [
                    "Driver"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getDriver",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Drivers all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Driver"
                ],
                "summary": "Creates a new Driver",
                "description": "Creates a new Driver",
                "operationId": "ee49d7a72113e8c63774c9eb2fa4a934",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Driver"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Driver resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/drivers/{id}": {
            "get": {
                "tags": [
                    "Driver"
                ],
                "summary": "Get Driver information",
                "description": "Returns Driver data",
                "operationId": "getDriverById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Driver id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Driver"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Driver"
                ],
                "summary": "Update existing Driver",
                "description": "Returns updated Driver data",
                "operationId": "updateDriver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Driver id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Driver"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Driver"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Driver"
                ],
                "summary": "Delete existing Driver",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteDriver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Driver id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/entities": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getEntity",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Entitys all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Entity"
                ],
                "summary": "Creates a new Entity",
                "description": "Creates a new Entity",
                "operationId": "d89ed9e7c6d4db6b69cbdfaf215afeac",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Entity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Entity resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/entities/{id}": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Get Entity information",
                "description": "Returns Entity data",
                "operationId": "getEntityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Entity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Entity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Entity"
                ],
                "summary": "Update existing Entity",
                "description": "Returns updated Entity data",
                "operationId": "updateEntity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Entity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Entity"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Entity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entity"
                ],
                "summary": "Delete existing Entity",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteEntity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Entity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/field-cash-flows": {
            "get": {
                "tags": [
                    "FieldCashFlow"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getfieldCashFlow",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Field cash flow all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "FieldCashFlow"
                ],
                "summary": "Creates a new field cash flow",
                "description": "Creates a new field cash flow",
                "operationId": "b74bc3c433171504fb783c150681cd55",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldCashFlow"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/field-cash-flows/{id}": {
            "get": {
                "tags": [
                    "FieldCashFlow"
                ],
                "summary": "Get active information",
                "description": "Returns  data",
                "operationId": "getfieldCashFlowById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "fiel cash flow id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldCashFlow"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "FieldCashFlow"
                ],
                "summary": "Update existing data",
                "description": "Returns updated  data",
                "operationId": "updatefieldCashFlow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "field cash flow id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldCashFlow"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldCashFlow"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FieldCashFlow"
                ],
                "summary": "Delete existing data",
                "description": "Deletes a record and returns no content",
                "operationId": "deletefieldCashFlows",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "field cash flow id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/fields": {
            "get": {
                "tags": [
                    "Field"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getField",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Fields all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Field"
                ],
                "summary": "Creates a new Field",
                "description": "Creates a new Field",
                "operationId": "5067df0d90e2096b52df7fcaa12de418",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Field"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Field resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/fields/{id}": {
            "get": {
                "tags": [
                    "Field"
                ],
                "summary": "Get Field information",
                "description": "Returns Field data",
                "operationId": "getFieldById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Field id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Field"
                ],
                "summary": "Update existing Field",
                "description": "Returns updated Field data",
                "operationId": "updateField",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Field id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Field"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Field"
                ],
                "summary": "Delete existing Field",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteField",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Field id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/field-supervisors": {
            "get": {
                "tags": [
                    "FieldSupervisor"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getFieldSupervisor",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show FieldSupervisors all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "FieldSupervisor"
                ],
                "summary": "Creates a new FieldSupervisor",
                "description": "Creates a new FieldSupervisor",
                "operationId": "34084cceb94619b7bd5bcce3af902239",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldSupervisor"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The FieldSupervisor resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/field-supervisors/{id}": {
            "get": {
                "tags": [
                    "FieldSupervisor"
                ],
                "summary": "Get FieldSupervisor information",
                "description": "Returns FieldSupervisor data",
                "operationId": "getFieldSupervisorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "FieldSupervisor id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldSupervisor"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "FieldSupervisor"
                ],
                "summary": "Update existing FieldSupervisor",
                "description": "Returns updated FieldSupervisor data",
                "operationId": "updateFieldSupervisor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "FieldSupervisor id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldSupervisor"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldSupervisor"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FieldSupervisor"
                ],
                "summary": "Delete existing FieldSupervisor",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteFieldSupervisor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "FieldSupervisor id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/guides": {
            "get": {
                "tags": [
                    "Guide"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getGuide",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Guides all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Guide"
                ],
                "summary": "Creates a new Guide",
                "description": "Creates a new Guide",
                "operationId": "cb0a6020d98866b6a06e08ffd696ee8a",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Guide"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Guide resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/guides/{id}": {
            "get": {
                "tags": [
                    "Guide"
                ],
                "summary": "Get Guide information",
                "description": "Returns Guide data",
                "operationId": "getGuideById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Guide id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guide"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Guide"
                ],
                "summary": "Update existing Guide",
                "description": "Returns updated Guide data",
                "operationId": "updateGuide",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Guide id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Guide"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guide"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Guide"
                ],
                "summary": "Delete existing Guide",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteGuide",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Guide id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/operation-types": {
            "get": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getOperationType",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show OperationTypes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Creates a new OperationType",
                "description": "Creates a new OperationType",
                "operationId": "da211e67eb517081b7691236f8878920",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The OperationType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/operation-types/{id}": {
            "get": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Get OperationType information",
                "description": "Returns OperationType data",
                "operationId": "getOperationTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Update existing OperationType",
                "description": "Returns updated OperationType data",
                "operationId": "updateOperationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Delete existing OperationType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOperationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getOrder",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Orders all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Creates a new Order",
                "description": "Creates a new Order",
                "operationId": "445bab4f7dc9ea6fcd54f286c0209478",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Order resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/orders/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Order information",
                "description": "Returns Order data",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update existing Order",
                "description": "Returns updated Order data",
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Delete existing Order",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getOrganization",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Organizations all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Creates a new Organization",
                "description": "Creates a new Organization",
                "operationId": "73444d3d0c39d645824c15720b7fb98a",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Organization resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organizations/{id}": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organization information",
                "description": "Returns Organization data",
                "operationId": "getOrganizationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organization"
                ],
                "summary": "Update existing Organization",
                "description": "Returns updated Organization data",
                "operationId": "updateOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organization"
                ],
                "summary": "Delete existing Organization",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/payment-orders": {
            "get": {
                "tags": [
                    "PaymentOrder"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getpaymetOrder",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "payment orders all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "PaymentOrder"
                ],
                "summary": "Creates a new Payment-order",
                "description": "Creates a new Payment-order",
                "operationId": "dd27a050b452d8d224e341fff423d873",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The paymentOrder resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payment-orders/{id}": {
            "put": {
                "tags": [
                    "PaymentOrder"
                ],
                "summary": "Update existing payment order",
                "description": "Returns updated rate data",
                "operationId": "updatepaymentOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "payment_order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentOrder"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PaymentOrder"
                ],
                "summary": "Delete existing payment order",
                "description": "Deletes a record and returns no content",
                "operationId": "deletepaymentOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "payment_order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/personals": {
            "get": {
                "tags": [
                    "Personal"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getpersonal",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "personal all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Personal"
                ],
                "summary": "Creates a new personal",
                "description": "Creates a new personal",
                "operationId": "a1ed127aa899bdeb760f1b54efbd60a5",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Personal"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The personal resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/personals/{id}": {
            "get": {
                "tags": [
                    "Personal"
                ],
                "summary": "Get personal information",
                "description": "Returns personal data",
                "operationId": "getpersonalById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "personal id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Personal"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Personal"
                ],
                "summary": "Update existing personal",
                "description": "Returns updated personal data",
                "operationId": "updatepersonal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "personal id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Personal"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Personal"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Personal"
                ],
                "summary": "Delete existing personal",
                "description": "Deletes a record and returns no content",
                "operationId": "deletepersonal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "personal id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/ports": {
            "get": {
                "tags": [
                    "Port"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getport",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "port all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Port"
                ],
                "summary": "Creates a new port",
                "description": "Creates a new port",
                "operationId": "b23afbab3baced76c2d35e62880d4358",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Port"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/ports/{id}": {
            "get": {
                "tags": [
                    "Port"
                ],
                "summary": "Get Port information",
                "description": "Returns Port data",
                "operationId": "getportById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "port id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Port"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Port"
                ],
                "summary": "Update existing port",
                "description": "Returns updated port data",
                "operationId": "updateport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "port id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Port"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Port"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Port"
                ],
                "summary": "Delete existing port",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "port id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getprovider",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Providers all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Provider"
                ],
                "summary": "Creates a new provider",
                "description": "Creates a new provider",
                "operationId": "22a88d5f1b1c596a5c71d037cfb380fb",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Provider"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/providers/{id}": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "summary": "Get providers information",
                "description": "Returns providers data",
                "operationId": "getproviderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "provider id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Provider"
                ],
                "summary": "Update existing provider",
                "description": "Returns updated provider data",
                "operationId": "updateprovider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "provider id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Provider"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "summary": "Delete existing provider",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteprovider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "provider id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/provider-types": {
            "get": {
                "tags": [
                    "ProviderType"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getProvider-type",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show MaterialSupplierTypes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "ProviderType"
                ],
                "summary": "Creates a new ProviderType",
                "description": "Creates a new ProviderType",
                "operationId": "938571488620cb90f391f95c4a52affe",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The ProviderType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/provider-types/{id}": {
            "get": {
                "tags": [
                    "ProviderType"
                ],
                "summary": "Get ProviderType information",
                "description": "Returns ProviderTypee data",
                "operationId": "getProviderTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ProviderType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "ProviderType"
                ],
                "summary": "Update existing ProviderType",
                "description": "Returns updated Provider Type data",
                "operationId": "updateProvierType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider_type _id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProviderType"
                ],
                "summary": "Delete existing ProviderType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProviderType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ProviderType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/rates": {
            "get": {
                "tags": [
                    "Rate"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getrate",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rate all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Rate"
                ],
                "summary": "Creates a new rate",
                "description": "Creates a new rate",
                "operationId": "5a7a5b32cc2943e7b77a4cb6da67718f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/rates/{id}": {
            "get": {
                "tags": [
                    "Rate"
                ],
                "summary": "Get rate information",
                "description": "Returns providers data",
                "operationId": "getrateId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "rate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Rate"
                ],
                "summary": "Update existing rate",
                "description": "Returns updated rate data",
                "operationId": "updaterate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "rate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Rate"
                ],
                "summary": "Delete existing provider",
                "description": "Deletes a record and returns no content",
                "operationId": "deleterate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "rate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/responsables": {
            "get": {
                "tags": [
                    "Responsable"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getResponsable",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Responsables all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Responsable"
                ],
                "summary": "Creates a new Responsable",
                "description": "Creates a new Responsable",
                "operationId": "6b5665cb636c2161fd32ad011e93a77d",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Responsable"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Responsable resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/responsables/{id}": {
            "get": {
                "tags": [
                    "Responsable"
                ],
                "summary": "Get Responsable information",
                "description": "Returns Responsable data",
                "operationId": "getResponsableById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Responsable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Responsable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Responsable"
                ],
                "summary": "Update existing Responsable",
                "description": "Returns updated Responsable data",
                "operationId": "updateResponsable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Responsable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Responsable"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Responsable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Responsable"
                ],
                "summary": "Delete existing Responsable",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteResponsable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Responsable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/staff-types": {
            "get": {
                "tags": [
                    "StaffType"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getstaffType",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff type all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "StaffType"
                ],
                "summary": "Creates a new staff type",
                "description": "Creates a new staff type",
                "operationId": "52d19a2b89e470a0e9f38ba68869fa3c",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/staff-types/{id}": {
            "get": {
                "tags": [
                    "StaffType"
                ],
                "summary": "Get Staff type information",
                "description": "Returns Staff type data",
                "operationId": "getstaffTypeId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Staff type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "StaffType"
                ],
                "summary": "Update existing staff type",
                "description": "Returns updated rate data",
                "operationId": "updatestaffType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "staff type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "StaffType"
                ],
                "summary": "Delete existing staff type",
                "description": "Deletes a record and returns no content",
                "operationId": "deletestaffType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "staff type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/states": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getState",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show States all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "State"
                ],
                "summary": "Creates a new State",
                "description": "Creates a new State",
                "operationId": "3a320d9021a1c0341e6fe95fe73609c3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/State"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The State resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/states/{id}": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "Get State information",
                "description": "Returns State data",
                "operationId": "getStateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "State"
                ],
                "summary": "Update existing State",
                "description": "Returns updated State data",
                "operationId": "updateState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/State"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "State"
                ],
                "summary": "Delete existing State",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/tickets": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getticket",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ticket all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Creates a new ticket",
                "description": "Creates a new ticket",
                "operationId": "f9282cd452389d3cc5d06f0cf782b672",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ticket"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/tickets/{id}": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get ticket information",
                "description": "Returns ticket data",
                "operationId": "getticketId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "rate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Update existing ticket",
                "description": "Returns updated rate data",
                "operationId": "updateticket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ticket id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ticket"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Delete existing ticket",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteticket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ticket id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/trailers": {
            "get": {
                "tags": [
                    "Trailer"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getTrailer",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Trailers all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Trailer"
                ],
                "summary": "Creates a new Trailer",
                "description": "Creates a new Trailer",
                "operationId": "5b23eb9a313a9f431b90dce27a29d906",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trailer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Trailer resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/trailers/{id}": {
            "get": {
                "tags": [
                    "Trailer"
                ],
                "summary": "Get Trailer information",
                "description": "Returns Trailer data",
                "operationId": "getTrailerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Trailer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trailer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Trailer"
                ],
                "summary": "Update existing Trailer",
                "description": "Returns updated Trailer data",
                "operationId": "updateTrailer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Trailer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trailer"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trailer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Trailer"
                ],
                "summary": "Delete existing Trailer",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTrailer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Trailer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "gettransaction",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Creates a new transaction",
                "description": "Creates a new transaction",
                "operationId": "238affdbe033b73010cbace3ad94520e",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Provider resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/transactions/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction information",
                "description": "Returns transaction data",
                "operationId": "gettransactionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update existing transaction",
                "description": "Returns updated port data",
                "operationId": "updatetransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete existing transaction",
                "description": "Deletes a record and returns no content",
                "operationId": "deletetransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "unit-of-measurements": {
            "get": {
                "tags": [
                    "UnitOfMeasurement"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getUnitOfMeasurement",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show UnitOfMeasurements all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "UnitOfMeasurement"
                ],
                "summary": "Creates a new UnitOfMeasurement",
                "description": "Creates a new UnitOfMeasurement",
                "operationId": "bc7e27af1201d1ca906156ba3408ac69",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitOfMeasurement"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The UnitOfMeasurement resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "unit-of-measurements/{id}": {
            "get": {
                "tags": [
                    "UnitOfMeasurement"
                ],
                "summary": "Get UnitOfMeasurement information",
                "description": "Returns UnitOfMeasurement data",
                "operationId": "getUnitOfMeasurementById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UnitOfMeasurement id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnitOfMeasurement"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "UnitOfMeasurement"
                ],
                "summary": "Update existing UnitOfMeasurement",
                "description": "Returns updated UnitOfMeasurement data",
                "operationId": "updateUnitOfMeasurement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UnitOfMeasurement id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitOfMeasurement"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnitOfMeasurement"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "UnitOfMeasurement"
                ],
                "summary": "Delete existing UnitOfMeasurement",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteUnitOfMeasurement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UnitOfMeasurement id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/vehicles": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getVehicle",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Vehicles all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Creates a new Vehicle",
                "description": "Creates a new Vehicle",
                "operationId": "e19336f3d4ff20d9858a84d5113213bc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Vehicle resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vehicles/{id}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get Vehicle information",
                "description": "Returns Vehicle data",
                "operationId": "getVehicleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Update existing Vehicle",
                "description": "Returns updated Vehicle data",
                "operationId": "updateVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Delete existing Vehicle",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/vehicle-types": {
            "get": {
                "tags": [
                    "VehicleType"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getVehicleType",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show VehicleTypes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "VehicleType"
                ],
                "summary": "Creates a new VehicleType",
                "description": "Creates a new VehicleType",
                "operationId": "c9ddf258c67f043b5614102b296699bd",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The VehicleType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vehicle-types/{id}": {
            "get": {
                "tags": [
                    "VehicleType"
                ],
                "summary": "Get VehicleType information",
                "description": "Returns VehicleType data",
                "operationId": "getVehicleTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VehicleType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "VehicleType"
                ],
                "summary": "Update existing VehicleType",
                "description": "Returns updated VehicleType data",
                "operationId": "updateVehicleType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VehicleType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "VehicleType"
                ],
                "summary": "Delete existing VehicleType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteVehicleType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "VehicleType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Active": {
                "properties": {
                    "name": {
                        "description": "The name active",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "description": "The status active",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "default": "active"
                    },
                    "description": {
                        "description": "description active",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "ownerable_type": {
                        "description": "The active ownerable_type",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "App\\Models\\NameModel"
                    },
                    "ownerable_id": {
                        "description": "The active ownerable_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "attributes": {
                        "description": "The active attribute_types",
                        "required": [
                            "false"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "attribute_id": {
                                    "type": "number"
                                },
                                "valor": {
                                    "type": "string"
                                },
                                "user_created_id": {
                                    "type": "number",
                                    "example": 1
                                }
                            },
                            "type": "object"
                        }
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Attribute": {
                "properties": {
                    "name": {
                        "description": "The name active",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "description active",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Beneficiary": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Beneficiary name",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "last_name": {
                                "description": "The Beneficiary last_name",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "document_number": {
                                "description": "The Beneficiary document_number",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "email": {
                                "description": "The Beneficiary email",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "phone_number": {
                                "description": "The Beneficiary phone_number",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "user_created_id": {
                                "description": "The Users crete",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            },
                            "user_updated_id": {
                                "description": "The Users update",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            }
                        }
                    }
                ]
            },
            "BranchOffice": {
                "properties": {
                    "name": {
                        "description": "The Branch Office name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Branch Office description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "name": {
                        "description": "The name category",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "description category",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Client": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "document_number": {
                        "description": "The Clients document number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The Clients email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "address": {
                        "description": "The Clients address",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "states": {
                        "description": "The Clients address",
                        "required": [
                            "true"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "state_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "img": {
                        "description": "The Clients img",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "The Clients phone number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Clients crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Clients update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Coin": {
                "properties": {
                    "name": {
                        "description": "The Coin name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "symbol": {
                        "description": "The Coin symbol",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Company": {
                "properties": {
                    "name": {
                        "description": "The name company",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "document_number": {
                        "description": "The rif company",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The email company",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "The rif company",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "description company",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Concept": {
                "properties": {
                    "name": {
                        "description": "The Concept name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Concept description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "concept_type_id": {
                        "description": "The Concept concept_type_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "ConceptType": {
                "properties": {
                    "name": {
                        "description": "The ConceptType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The ConceptType description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "sign": {
                        "description": "The ConceptType sign",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Driver": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The Drivers password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The Drivers email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "document_number": {
                        "description": "The Drivers document number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "The Drivers phone number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "ownerable_type": {
                        "description": "The Trailer ownerable_type",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "App\\Models\\MaterialSupplier"
                    },
                    "ownerable_id": {
                        "description": "The Trailer ownerable_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "user_created_id": {
                        "description": "The Drivers crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Drivers update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Entity": {
                "properties": {
                    "name": {
                        "description": "The Entity name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Entity description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Field": {
                "properties": {
                    "contract_number": {
                        "description": "The contract_number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "denomination": {
                        "description": "The Field denomination",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "acronym": {
                        "description": "The Field acronym",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "address": {
                        "description": "The Field address",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "organization_id": {
                        "description": "The Field organization_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "field_supervisor_id": {
                        "description": "The Field field_supervisor_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "FieldCashFlow": {
                "properties": {
                    "amount": {
                        "description": "The amount",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "format": "float",
                        "example": 1000
                    },
                    "description": {
                        "description": "description active",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "concept_id": {
                        "description": "The concept",
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "field_id": {
                        "description": "The field_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "transaction_id": {
                        "description": "The transaction_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "status": {
                        "description": "The status active",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "default": "approved"
                    },
                    "beneficiary_id": {
                        "description": "The beneficiary_id",
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "balance": {
                        "description": "The balance",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "FieldSupervisor": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The FieldSupervisor name",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "last_name": {
                                "description": "The FieldSupervisor last_name",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "document_number": {
                                "description": "The FieldSupervisor document_number",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "email": {
                                "description": "The FieldSupervisor email",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "phone_number": {
                                "description": "The FieldSupervisor phone_number",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "user_created_id": {
                                "description": "The Users crete",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            },
                            "user_updated_id": {
                                "description": "The Users update",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            }
                        }
                    }
                ]
            },
            "Guide": {
                "properties": {
                    "material_supplier_id": {
                        "description": "The Guide material_supplier_id",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "client_id": {
                        "description": "The Guide client_id",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "vehicle_id": {
                        "description": "The Guide vehicle_id",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "trailer_id": {
                        "description": "The Guide trailer_id",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "driver_id": {
                        "description": "The Guide driver_id",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "start_date": {
                        "description": "The Guide start_date",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "deadline": {
                        "description": "The Guide deadline",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "origin_address": {
                        "description": "The Guide origin_address",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "destination_address": {
                        "description": "The Guide destination_address",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "material": {
                        "description": "The Guide material",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "code_runpa": {
                        "description": "The Guide code_runpa",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "OperationType": {
                "properties": {
                    "name": {
                        "description": "The OperationType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The OperationType description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Order": {
                "properties": {
                    "organization_id": {
                        "description": "The Order organization_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "egress_type_id": {
                        "description": "The Order egress_type_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "beneficiary_id": {
                        "description": "The Order beneficiary_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "responsable_id": {
                        "description": "The Order responsable_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "field_id": {
                        "description": "The Order field_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "observation": {
                        "description": "The Order observation",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "contract": {
                        "description": "The Order contract",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Organization": {
                "properties": {
                    "name": {
                        "description": "The Organization name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Organization description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "PaymentOrder": {
                "properties": {
                    "description": {
                        "description": "The description to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "description": "The status active",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "default": "pending_approval"
                    },
                    "amount": {
                        "description": "The amount to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "operation_type_id": {
                        "description": "The operation type to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "ownerable_id": {
                        "description": "The ownerable_id to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "ownerable_type": {
                        "description": "The ownerable_type to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "App\\Model\\Name"
                    },
                    "entity_id": {
                        "description": "The entity_id to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "coin_id": {
                        "description": "The coin_id to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "payment_date": {
                        "description": "The payment date to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The user_created_id to payment order",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Personal": {
                "properties": {
                    "name": {
                        "description": "The Entity name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The last name personal",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "document_number": {
                        "description": "The document number personal",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "address": {
                        "description": "The address personal",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The email personal",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "The phone_number personal",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "ownerable_type": {
                        "description": "The perosnal ownerable_type",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "App\\Models\\NameModel"
                    },
                    "ownerable_id": {
                        "description": "The persoal ownerable_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "staff_type_id": {
                        "description": "The staff type",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The user id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Port": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "rif": {
                        "description": "The port rif",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "city": {
                        "description": "The Provider city",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "state": {
                        "description": "The Provider state",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The user create",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The user update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Provider": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "document_number": {
                        "description": "The Provider document number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "address": {
                        "description": "The Provider address",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "signature": {
                        "description": "The Provider signature",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "serie_number": {
                        "description": "The Provider serie_number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "logo": {
                        "description": "The Provider logo",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "seal": {
                        "description": "The Provider seal",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "The Provider phone number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The Provider email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Provider crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Provider update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "ProviderType": {
                "properties": {
                    "name": {
                        "description": "The ProviderType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The ProviderType description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Rate": {
                "properties": {
                    "rate": {
                        "description": "The rate",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "description": {
                        "description": "Description of rate",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "provider_id": {
                        "description": "The relational field with provider",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "unit_of_measurement_id": {
                        "description": "The relational field with unit measurement",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "user_created_id": {
                        "description": "The Provider crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Provider update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Responsable": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "The Responsable name",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "last_name": {
                                "description": "The Responsable last_name",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "document_number": {
                                "description": "The Responsable document_number",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "email": {
                                "description": "The Responsable email",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "phone_number": {
                                "description": "The Responsable phone_number",
                                "required": [
                                    "true"
                                ],
                                "type": "string"
                            },
                            "user_created_id": {
                                "description": "The Responsable crete",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            },
                            "beneficiary_id": {
                                "description": "The Responsable beneficiary",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            },
                            "user_updated_id": {
                                "description": "The Responsable update",
                                "required": [
                                    "true"
                                ],
                                "type": "number",
                                "example": 1
                            }
                        }
                    }
                ]
            },
            "StaffType": {
                "properties": {
                    "name": {
                        "description": "The name staff type",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The description staff type",
                        "required": [
                            "false"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "State": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The States crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The States update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Ticket": {
                "properties": {
                    "provider_id": {
                        "description": "The ticket provider_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "field_id": {
                        "description": "The ticket field_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "guide_id": {
                        "description": "The ticket guide_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "tare_weight": {
                        "description": "The ticket tare weight",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "gross_weight": {
                        "description": "The ticket gross_weight",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "tare": {
                        "description": "The ticket tare",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "vehicle_number": {
                        "description": "The ticket vehicle_number",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "certificate": {
                        "description": "The ticket certificate",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "start_date": {
                        "description": "The ticket start_date",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "final_date": {
                        "description": "The ticket final_date",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "checkweighing": {
                        "description": "The ticket checkweighing",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "actives": {
                        "description": "The Product attribute_types",
                        "required": [
                            "false"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "personal_id": {
                                    "type": "number"
                                },
                                "active_id": {
                                    "type": "number"
                                },
                                "user_created_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "client_id": {
                        "description": "The ticket client_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Trailer": {
                "properties": {
                    "name": {
                        "description": "The Trailer name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "brand": {
                        "description": "The Trailer brand",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "model": {
                        "description": "The Trailer model",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "plate": {
                        "description": "The Trailer plate",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "ownerable_type": {
                        "description": "The Trailer ownerable_type",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "App\\Models\\MaterialSupplier"
                    },
                    "ownerable_id": {
                        "description": "The Trailer ownerable_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "properties": {
                    "amount": {
                        "description": "The number transaction",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "description": {
                        "description": "The description transaction",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "default": "active"
                    },
                    "date": {
                        "description": "date transaction",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "reference": {
                        "description": "reference transaction",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "beneficiary_id": {
                        "description": "The beneficiary_id ",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "payment_order_id": {
                        "description": "The payment_order_id ",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "concept_id": {
                        "description": "The concept_id",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UnitOfMeasurement": {
                "properties": {
                    "name": {
                        "description": "The Unit Of Measurement name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "acronym": {
                        "description": "The Unit Of Measurement acronym",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The UnitOfMeasurements crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The UnitOfMeasurements update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The Users password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The Users email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "roles": {
                        "description": "The Product attribute_types",
                        "required": [
                            "false"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "role_id": {
                                    "type": "number"
                                },
                                "branch_office_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "password": {
                        "description": "The Users password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Vehicle": {
                "properties": {
                    "name": {
                        "description": "The Vehicle name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "brand": {
                        "description": "The Vehicle brand",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "model": {
                        "description": "The Vehicle model",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "plate": {
                        "description": "The Vehicle plate",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "ownerable_type": {
                        "description": "The Vehicle ownerable_type",
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "example": "App\\Models\\MaterialSupplier"
                    },
                    "ownerable_id": {
                        "description": "The Vehicle ownerable_id",
                        "required": [
                            "true"
                        ],
                        "type": "number"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "VehicleType": {
                "properties": {
                    "name": {
                        "description": "The VehicleType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The VehicleType description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            }
        }
    }
}